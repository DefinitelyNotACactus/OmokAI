/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import data.Player;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author david
 */
public class Game extends JFrame {
    
    private Player player1;
    private Player player2;
    
    private int turn;
    private boolean finished;
    private Piece[][] board;
    
    /**
     * Creates new form Game
     * @param player1
     * @param player2
     */
    public Game(Player player1, Player player2) {
        this.player1 = player1;
        this.player2 = player2;
        System.out.println(player1.getName());
        System.out.println(player2.getName());
        turn = 1;
        finished = false;
        board = new Piece[15][15];
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gamePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        btReady = new javax.swing.JButton();
        btStart = new javax.swing.JButton();
        btExit = new javax.swing.JButton();
        turnLabel = new javax.swing.JLabel();
        timerLabel = new javax.swing.JLabel();
        player1TurnLabel = new javax.swing.JLabel();
        player1PieceLabel = new javax.swing.JLabel();
        player1NameLabel = new javax.swing.JLabel();
        info1Label = new javax.swing.JLabel();
        player2TurnLabel = new javax.swing.JLabel();
        player2PieceLabel = new javax.swing.JLabel();
        player2NameLabel = new javax.swing.JLabel();
        info2Label = new javax.swing.JLabel();
        boardPanel = new javax.swing.JPanel();
        actionsPanel = new javax.swing.JPanel();
        btAbsten = new javax.swing.JButton();
        btDraw = new javax.swing.JButton();
        btRefund = new javax.swing.JButton();
        backgroundLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Omok");
        setLocation(new java.awt.Point(200, 200));
        setResizable(false);
        setSize(new java.awt.Dimension(734, 429));

        gamePanel.setSize(new java.awt.Dimension(734, 429));
        gamePanel.setLayout(null);

        titleLabel.setText("(G)omok(u)");
        gamePanel.add(titleLabel);
        titleLabel.setBounds(510, 20, 210, 16);

        btReady.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btReady.normal.0.png"))); // NOI18N
        btReady.setBorderPainted(false);
        btReady.setContentAreaFilled(false);
        btReady.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btReady.disabled.0.png"))); // NOI18N
        btReady.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btReady.pressed.0.png"))); // NOI18N
        btReady.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btReady.mouseOver.0.png"))); // NOI18N
        btReady.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btReadyActionPerformed(evt);
            }
        });
        gamePanel.add(btReady);
        btReady.setBounds(623, 242, 97, 29);
        btReady.setVisible(false);

        btStart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btStart.normal.0.png"))); // NOI18N
        btStart.setBorderPainted(false);
        btStart.setContentAreaFilled(false);
        btStart.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btStart.disabled.0.png"))); // NOI18N
        btStart.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btStart.pressed.0.png"))); // NOI18N
        btStart.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btStart.mouseOver.0.png"))); // NOI18N
        btStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btStartActionPerformed(evt);
            }
        });
        gamePanel.add(btStart);
        btStart.setBounds(623, 242, 97, 29);

        btExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btExit.normal.0.png"))); // NOI18N
        btExit.setBorderPainted(false);
        btExit.setContentAreaFilled(false);
        btExit.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btExit.normal.0.png"))); // NOI18N
        btExit.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btExit.mouseOver.0.png"))); // NOI18N
        btExit.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btExit.pressed.0.png"))); // NOI18N
        btExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitActionPerformed(evt);
            }
        });
        gamePanel.add(btExit);
        btExit.setBounds(678, 403, 43, 18);

        turnLabel.setText("Press start to begin");
        gamePanel.add(turnLabel);
        turnLabel.setBounds(15, 404, 260, 16);

        timerLabel.setText("00:00");
        gamePanel.add(timerLabel);
        timerLabel.setBounds(300, 404, 80, 16);

        player1TurnLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.turn.png"))); // NOI18N
        gamePanel.add(player1TurnLabel);
        player1TurnLabel.setBounds(401, 56, 81, 176);
        player1TurnLabel.setVisible(false);

        player1PieceLabel.setIcon(player1.getIcon());
        gamePanel.add(player1PieceLabel);
        player1PieceLabel.setBounds(407, 190, 23, 23);

        player1NameLabel.setText(player1.getName());
        player1NameLabel.setHorizontalAlignment(SwingConstants.CENTER);
        gamePanel.add(player1NameLabel);
        player1NameLabel.setBounds(407, 215, 70, 14);

        info1Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.info0.png"))); // NOI18N
        gamePanel.add(info1Label);
        info1Label.setBounds(403, 151, 77, 64);

        player2TurnLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.turn.png"))); // NOI18N
        gamePanel.add(player2TurnLabel);
        player2TurnLabel.setBounds(487, 56, 81, 176);
        player2TurnLabel.setVisible(false);

        player2PieceLabel.setIcon(player2.getIcon());
        gamePanel.add(player2PieceLabel);
        player2PieceLabel.setBounds(494, 190, 23, 23);

        player2NameLabel.setText(player2.getName());
        player2NameLabel.setHorizontalAlignment(SwingConstants.CENTER);
        gamePanel.add(player2NameLabel);
        player2NameLabel.setBounds(493, 215, 70, 14);

        info2Label.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.info0.png"))); // NOI18N
        gamePanel.add(info2Label);
        info2Label.setBounds(490, 151, 77, 64);

        boardPanel.setOpaque(false);
        boardPanel.setLayout(new java.awt.GridLayout(15, 15));
        gamePanel.add(boardPanel);
        boardPanel.setBounds(12, 20, 374, 370);

        actionsPanel.setOpaque(false);
        actionsPanel.setLayout(new javax.swing.BoxLayout(actionsPanel, javax.swing.BoxLayout.LINE_AXIS));

        btAbsten.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btAbsten.normal.0.png"))); // NOI18N
        btAbsten.setBorderPainted(false);
        btAbsten.setContentAreaFilled(false);
        btAbsten.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btAbsten.disabled.0.png"))); // NOI18N
        btAbsten.setMaximumSize(new java.awt.Dimension(47, 18));
        btAbsten.setMinimumSize(new java.awt.Dimension(47, 18));
        btAbsten.setPreferredSize(new java.awt.Dimension(47, 18));
        btAbsten.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btAbsten.mouseOver.0.png"))); // NOI18N
        btAbsten.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btAbsten.pressed.0.png"))); // NOI18N
        btAbsten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAbstenActionPerformed(evt);
            }
        });
        actionsPanel.add(btAbsten);

        btDraw.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btDraw.normal.0.png"))); // NOI18N
        btDraw.setBorderPainted(false);
        btDraw.setContentAreaFilled(false);
        btDraw.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btDraw.disabled.0.png"))); // NOI18N
        btDraw.setMaximumSize(new java.awt.Dimension(47, 18));
        btDraw.setMinimumSize(new java.awt.Dimension(47, 18));
        btDraw.setPreferredSize(new java.awt.Dimension(47, 18));
        btDraw.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btDraw.mouseOver.0.png"))); // NOI18N
        btDraw.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btDraw.pressed.0.png"))); // NOI18N
        btDraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDrawActionPerformed(evt);
            }
        });
        actionsPanel.add(btDraw);

        btRefund.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btRefund.normal.0.png"))); // NOI18N
        btRefund.setBorderPainted(false);
        btRefund.setContentAreaFilled(false);
        btRefund.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btRefund.disabled.0.png"))); // NOI18N
        btRefund.setMaximumSize(new java.awt.Dimension(47, 18));
        btRefund.setMinimumSize(new java.awt.Dimension(47, 18));
        btRefund.setPreferredSize(new java.awt.Dimension(47, 18));
        btRefund.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btRefund.mouseOver.0.png"))); // NOI18N
        btRefund.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Common/Common.btRefund.pressed.0.png"))); // NOI18N
        btRefund.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRefundActionPerformed(evt);
            }
        });
        actionsPanel.add(btRefund);

        gamePanel.add(actionsPanel);
        actionsPanel.setBounds(409, 403, 250, 18);

        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/Omok.backgrnd.png"))); // NOI18N
        gamePanel.add(backgroundLabel);
        backgroundLabel.setBounds(0, 0, 734, 429);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(gamePanel, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitActionPerformed
        int selection = JOptionPane.showConfirmDialog(this, "Are you sure you want to leave?", "Info", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE);
        if(selection == 0) {
            dispose();
        }
    }//GEN-LAST:event_btExitActionPerformed

    private void btReadyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btReadyActionPerformed
        
    }//GEN-LAST:event_btReadyActionPerformed

    private void btAbstenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAbstenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btAbstenActionPerformed

    private void btDrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDrawActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btDrawActionPerformed

    private void btRefundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRefundActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btRefundActionPerformed

    private void btStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btStartActionPerformed
        Piece piece;
        boardPanel.removeAll();
        for(int i = 0; i < 15; i++) {
            for(int j = 0; j < 15; j++) {
                piece = new Piece(this, j, i);
                board[i][j] = piece;
                boardPanel.add(piece);
            }
        }
        btStart.setVisible(false);
        //btReady.setVisible(true);
        finished = false;
        turn = 1;
        nextMove();
        boardPanel.revalidate();
    }//GEN-LAST:event_btStartActionPerformed

    private void nextMove() {
        turn = (turn+1)%2;
        player1TurnLabel.setVisible((turn == 0));
        player2TurnLabel.setVisible((turn == 1));
        turnLabel.setText("[" + getCurrentPlayer().getName() + "] turn");
    }
    
    public void searchCombo(int x, int y) {
        int rightX = x+4, leftX = x-4, topY = y-4, bottomY = y+4;
        //create bounding box
        if(leftX < 0) {
            leftX = 0;
            }
        if(rightX > 14) {
            rightX = 14;
            }
        if(topY < 0) {
            topY = 0;
            }
        if(bottomY > 14) {
            bottomY = 14;
        }
        for(int i = leftX, count = 0; i <= rightX; i++) { //check horizontal
            if(board[y][i].getOwner() == getCurrentPlayer()) {
                count++;
            } else {
                count = 0;
            }
            System.out.printf("[H] X: %d Y: %d Count: %d ", i, y, count);
            if(count == 5) {
                finishGame();
            }
        }
        System.out.println("");
        for(int i = topY, count = 0; i <= bottomY; i++) { //check vertical
            if(board[i][x].getOwner() == getCurrentPlayer()) {
                count++;
            } else {
                count = 0;
            }
            System.out.printf("[V] X: %d Y: %d Count: %d", x, i, count);
            if(count == 5) {
                finishGame();
            }
        }
        System.out.println("");
        for(int i = topY, j = leftX, count = 0; i <= bottomY && j <= rightX; i++, j++) { //check main diagonal
            if(board[i][j].getOwner() == getCurrentPlayer()) {
                count++;
            } else {
                count = 0;
            }
            System.out.printf("[MD] X: %d Y: %d Count: %d", j, i, count);
            if(count == 5) {
                finishGame();
            }
        }
        System.out.println("");
        for(int i = topY, j = rightX, count = 0; i <= bottomY && j >= leftX; i++, j--) { //check secondary diagonal
            if(board[i][j].getOwner() == getCurrentPlayer()) {
                count++;
            } else {
                count = 0;
            }
            System.out.printf("[SD] X: %d Y: %d Count: %d", j, i, count);
            if(count == 5) {
                finishGame();
            }
        }
        System.out.println("\n");
        if(!finished){
            nextMove();
        }
    }
    
    private void finishGame() {
        turnLabel.setText("[" + getCurrentPlayer().getName() + "] has won!");
        finished = true;
        btStart.setVisible(true);
        revalidate();
    }
    
    public Player getCurrentPlayer() {
        return (turn == 0? player1 : player2);
    }
    
    public boolean gameFinished() {
        return finished;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel actionsPanel;
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JPanel boardPanel;
    private javax.swing.JButton btAbsten;
    private javax.swing.JButton btDraw;
    private javax.swing.JButton btExit;
    private javax.swing.JButton btReady;
    private javax.swing.JButton btRefund;
    private javax.swing.JButton btStart;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JLabel info1Label;
    private javax.swing.JLabel info2Label;
    private javax.swing.JLabel player1NameLabel;
    private javax.swing.JLabel player1PieceLabel;
    private javax.swing.JLabel player1TurnLabel;
    private javax.swing.JLabel player2NameLabel;
    private javax.swing.JLabel player2PieceLabel;
    private javax.swing.JLabel player2TurnLabel;
    private javax.swing.JLabel timerLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JLabel turnLabel;
    // End of variables declaration//GEN-END:variables
}
